TO DO list

1. write the API
    (DONE) - determine URL for each GET and POST
    (DONE - error codes) - don't forget to send back some message to frontend
                           to tell them the backend actually saved the new data
                           from a POST request.
    (DONE - error codes) - Make system that will deal with cases such as
                         - the POST request did not give valid data
                         - the POST request is missing data
                         - the GET request could not find what frontend wanted
                         - etc.

2. Make methods that will give the right JSON to frontend
    (DONE - changed to getting them by GET & POST as joining the JSONs
    caused serialization problems. the is_valid() kept returning False
    and I don't know how to fix it.) - join advertisement with all it's
    accommodation reviews, events.

3. (DONE) Make methods that will write the given JSON to database

4. [Backend] write methods for searches for the search module

5. (DONE) - get events for an ad - [Backend] booking module: give frontend the
    dates and time for each event

6. (DONE) - the model method "check_overlap" should take care of this but probably
    need to write a method to tell frontend part from a 401 message. -
    [Backend] booking request module: check the advertisement's events

7. (DONE) - [Backend] allow user to decline, accept, cancel booking requests

8. [Backend] email communication between users


(DONE) - when deleting an ad, need to delete it's reviews and events
(DONE) - update the list that tells us what that instance owns
    , when deleting, creating
(DONE) - when adding a id to a list we need to have a comma after the id
(DONE) - check if the get views can return multiple querysets
(DONE) - validity check on events
(DONE) - add image list field to advertisement model

1. user profile needs a list_of_rentals (event_id) —> the places you are renting, have rented
2. user profile need a list of posted_reviews (rev_id) —> the reviews that you wrote for a rented place
(DONE) need functions to update the list_of_rentals and posted_reviews
(DONE) change the separators for list of posted reviews and rentals to ;


Errors fixed:
- the search distance, solution: use Haversine formula (refer to python file for more details)
- fixed date formatting for booking accommodation


TODO
- {George} when making booking, I need the email of the user booking the property,
            something like this.auth0.username
    - {gladys} update the TO DO tags for this [views related to this won't work till fixed]
- {Joseph} /get/2018-10-10/2018-10-18/null/2/50/100.50/3/ --> not giving location,
            even though I have that in the search form.
- {backend} need to work out how to pattern match the SEARCH URL given by frontend
- {Gladys} test the clashing events, still don't think it works perfectly
- {George} when creating a review, I need the email of the reviewer,
                something like this.auth0.username
    - {gladys} update the TO DO tags for this [views related to this won't work till fixed]
- {George & Gladys} test current views and check they work [FIRST thing TODO on Friday]
- {frontend} does creating an ad give backend a base_price?
- {George & Gladys} when creating an ad post the image is not given to backend
    - need to post the image separately --> path('post/image/create/', views.image_create),
- {frontend} need submit review button on review view
- check data before changing db
